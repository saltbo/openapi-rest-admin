{
  "openapi": "3.0.3",
  "info": {
    "title": "Deployment Management API",
    "description": "API for managing deployments, pods, and logs",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.example.com/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/deployments": {
      "get": {
        "summary": "List all deployments",
        "tags": ["Deployments"],
        "responses": {
          "200": {
            "description": "List of deployments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Deployment"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new deployment",
        "tags": ["Deployments"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Deployment created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deploymentId}": {
      "get": {
        "summary": "Get a specific deployment",
        "tags": ["Deployments"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deployment details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            }
          },
          "404": {
            "description": "Deployment not found"
          }
        }
      },
      "put": {
        "summary": "Update a deployment",
        "tags": ["Deployments"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deployment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            }
          },
          "404": {
            "description": "Deployment not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a deployment",
        "tags": ["Deployments"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deployment deleted successfully"
          },
          "404": {
            "description": "Deployment not found"
          }
        }
      }
    },
    "/deployments/{deploymentId}/pods": {
      "get": {
        "summary": "List all pods in a deployment",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of pods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pod"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new pod in a deployment",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PodCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pod created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pod"
                }
              }
            }
          }
        }
      }
    },
    "/deployments/{deploymentId}/pods/{podId}": {
      "get": {
        "summary": "Get a specific pod",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pod details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pod"
                }
              }
            }
          },
          "404": {
            "description": "Pod not found"
          }
        }
      },
      "put": {
        "summary": "Update a pod",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PodUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pod updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pod"
                }
              }
            }
          },
          "404": {
            "description": "Pod not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a pod",
        "tags": ["Pods"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Pod deleted successfully"
          },
          "404": {
            "description": "Pod not found"
          }
        }
      }
    },
    "/deployments/{deploymentId}/pods/{podId}/logs": {
      "get": {
        "summary": "Get logs for a specific pod",
        "tags": ["Logs"],
        "parameters": [
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lines",
            "in": "query",
            "description": "Number of lines to retrieve",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 1,
              "maximum": 10000
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Show logs since timestamp (RFC3339)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "follow",
            "in": "query",
            "description": "Follow log output",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pod logs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "Raw log output"
                }
              }
            }
          },
          "404": {
            "description": "Pod not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Deployment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the deployment"
          },
          "name": {
            "type": "string",
            "description": "Name of the deployment"
          },
          "namespace": {
            "type": "string",
            "description": "Kubernetes namespace"
          },
          "replicas": {
            "type": "integer",
            "description": "Number of desired replicas"
          },
          "image": {
            "type": "string",
            "description": "Container image"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "running", "succeeded", "failed"],
            "description": "Current status of the deployment"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the deployment was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the deployment was last updated"
          }
        },
        "required": ["id", "name", "namespace", "replicas", "image", "status"]
      },
      "DeploymentCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the deployment"
          },
          "namespace": {
            "type": "string",
            "description": "Kubernetes namespace"
          },
          "replicas": {
            "type": "integer",
            "description": "Number of desired replicas"
          },
          "image": {
            "type": "string",
            "description": "Container image"
          }
        },
        "required": ["name", "namespace", "replicas", "image"]
      },
      "DeploymentUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the deployment"
          },
          "replicas": {
            "type": "integer",
            "description": "Number of desired replicas"
          },
          "image": {
            "type": "string",
            "description": "Container image"
          }
        }
      },
      "Pod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the pod"
          },
          "name": {
            "type": "string",
            "description": "Name of the pod"
          },
          "deploymentId": {
            "type": "string",
            "description": "ID of the parent deployment"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "running", "succeeded", "failed", "unknown"],
            "description": "Current status of the pod"
          },
          "phase": {
            "type": "string",
            "enum": ["pending", "running", "succeeded", "failed", "unknown"],
            "description": "Current phase of the pod"
          },
          "node": {
            "type": "string",
            "description": "Node where the pod is running"
          },
          "restartCount": {
            "type": "integer",
            "description": "Number of times the pod has been restarted"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the pod was created"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "description": "When the pod was started"
          }
        },
        "required": ["id", "name", "deploymentId", "status", "phase"]
      },
      "PodCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the pod"
          },
          "image": {
            "type": "string",
            "description": "Container image"
          },
          "resources": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "string",
                "description": "CPU resource request"
              },
              "memory": {
                "type": "string",
                "description": "Memory resource request"
              }
            }
          }
        },
        "required": ["name", "image"]
      },
      "PodUpdate": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Container image"
          },
          "resources": {
            "type": "object",
            "properties": {
              "cpu": {
                "type": "string",
                "description": "CPU resource request"
              },
              "memory": {
                "type": "string",
                "description": "Memory resource request"
              }
            }
          }
        }
      },
      "LogResponse": {
        "type": "object",
        "properties": {
          "logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LogEntry"
            },
            "description": "Array of log entries"
          },
          "totalLines": {
            "type": "integer",
            "description": "Total number of log lines available"
          },
          "truncated": {
            "type": "boolean",
            "description": "Whether the log output was truncated"
          }
        },
        "required": ["logs"]
      },
      "LogEntry": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the log entry was created"
          },
          "level": {
            "type": "string",
            "enum": ["debug", "info", "warn", "error", "fatal"],
            "description": "Log level"
          },
          "message": {
            "type": "string",
            "description": "Log message content"
          },
          "container": {
            "type": "string",
            "description": "Container name that generated the log"
          }
        },
        "required": ["timestamp", "message"]
      }
    }
  },
  "tags": [
    {
      "name": "Deployments",
      "description": "Operations related to deployments"
    },
    {
      "name": "Pods",
      "description": "Operations related to pods within deployments"
    },
    {
      "name": "Logs",
      "description": "Operations for retrieving pod logs"
    }
  ]
}